-- NOTE: Plugins can specify dependencies.
--
-- The dependencies are proper plugin specifications as well - anything
-- you do for a plugin at the top level, you can do for a dependency.
--
-- Use the `dependencies` key to specify the dependencies of a particular plugin

return {
	-- { -- Fuzzy Finder (files, lsp, etc)
	-- 	"nvim-telescope/telescope.nvim",
	-- 	event = "VimEnter",
	-- 	branch = "0.1.x",
	-- 	dependencies = {
	-- 		"nvim-lua/plenary.nvim",
	-- 		{ -- If encountering errors, see telescope-fzf-native README for installation instructions
	-- 			"nvim-telescope/telescope-fzf-native.nvim",
	--
	-- 			-- `build` is used to run some command when the plugin is installed/updated.
	-- 			-- This is only run then, not every time Neovim starts up.
	-- 			build = "make",
	--
	-- 			-- `cond` is a condition used to determine whether this plugin should be
	-- 			-- installed and loaded.
	-- 			cond = function()
	-- 				return vim.fn.executable("make") == 1
	-- 			end,
	-- 		},
	-- 		{ "nvim-telescope/telescope-ui-select.nvim" },
	--
	-- 		-- Useful for getting pretty icons, but requires a Nerd Font.
	-- 		{ "nvim-tree/nvim-web-devicons", enabled = vim.g.have_nerd_font },
	-- 	},
	-- 	config = function()
	-- 		-- Telescope is a fuzzy finder that comes with a lot of different things that
	-- 		-- it can fuzzy find! It's more than just a "file finder", it can search
	-- 		-- many different aspects of Neovim, your workspace, LSP, and more!
	-- 		--
	-- 		-- The easiest way to use Telescope, is to start by doing something like:
	-- 		--  :Telescope help_tags
	-- 		--
	-- 		-- After running this command, a window will open up and you're able to
	-- 		-- type in the prompt window. You'll see a list of `help_tags` options and
	-- 		-- a corresponding preview of the help.
	-- 		--
	-- 		-- Two important keymaps to use while in Telescope are:
	-- 		--  - Insert mode: <c-/>
	-- 		--  - Normal mode: ?
	-- 		--
	-- 		-- This opens a window that shows you all of the keymaps for the current
	-- 		-- Telescope picker. This is really useful to discover what Telescope can
	-- 		-- do as well as how to actually do it!
	--
	-- 		-- [[ Configure Telescope ]]
	-- 		-- See `:help telescope` and `:help telescope.setup()`
	-- 		require("telescope").setup({
	-- 			-- You can put your default mappings / updates / etc. in here
	-- 			--  All the info you're looking for is in `:help telescope.setup()`
	-- 			--
	-- 			defaults = {
	-- 				--   mappings = {
	-- 				--     i = { ['<c-enter>'] = 'to_fuzzy_refine' },
	-- 				--   },
	-- 				-- },
	-- 				-- pickers = {}
	--
	-- 				vimgrep_arguments = {
	-- 					"rg",
	-- 					"-L",
	-- 					"--color=never",
	-- 					"--no-heading",
	-- 					"--with-filename",
	-- 					"--line-number",
	-- 					"--column",
	-- 					"--smart-case",
	-- 				},
	-- 				prompt_prefix = "   ",
	-- 				selection_caret = "  ",
	-- 				entry_prefix = "  ",
	-- 				initial_mode = "insert",
	-- 				selection_strategy = "reset",
	-- 				sorting_strategy = "ascending",
	-- 				layout_strategy = "horizontal",
	-- 				layout_config = {
	-- 					horizontal = {
	-- 						prompt_position = "top",
	-- 						preview_width = 0.55,
	-- 						results_width = 0.8,
	-- 					},
	-- 					vertical = {
	-- 						mirror = false,
	-- 					},
	-- 					width = 0.87,
	-- 					height = 0.80,
	-- 					preview_cutoff = 120,
	-- 				},
	-- 				file_sorter = require("telescope.sorters").get_fuzzy_file,
	-- 				file_ignore_patterns = { "node_modules" },
	-- 				generic_sorter = require("telescope.sorters").get_generic_fuzzy_sorter,
	-- 				path_display = { "truncate" },
	-- 				winblend = 0,
	-- 				border = {},
	-- 				borderchars = { "─", "│", "─", "│", "╭", "╮", "╯", "╰" },
	-- 				color_devicons = true,
	-- 				set_env = { ["COLORTERM"] = "truecolor" }, -- default = nil,
	-- 				file_previewer = require("telescope.previewers").vim_buffer_cat.new,
	-- 				grep_previewer = require("telescope.previewers").vim_buffer_vimgrep.new,
	-- 				qflist_previewer = require("telescope.previewers").vim_buffer_qflist.new,
	-- 				-- Developer configurations: Not meant for general override
	-- 				buffer_previewer_maker = require("telescope.previewers").buffer_previewer_maker,
	-- 				mappings = {
	-- 					i = {
	-- 						["<C-j>"] = require("telescope.actions").move_selection_next,
	-- 						["<C-k>"] = require("telescope.actions").move_selection_previous,
	-- 						["<C-u>"] = false,
	-- 						-- Exit out of insert mode in telescope
	-- 						["<C-c>"] = { "<esc>", type = "command" },
	-- 					},
	-- 					n = {
	-- 						["q"] = require("telescope.actions").close,
	-- 						-- Quit the telescope window
	-- 						["<C-c>"] = require("telescope.actions").close,
	-- 					},
	-- 				},
	-- 			},
	--
	-- 			extensions_list = { "themes", "terms", "fzf" },
	-- 			-- extensions = {
	-- 			-- 	["ui-select"] = {
	-- 			-- 		require("telescope.themes").get_dropdown(),
	-- 			-- 	},
	-- 			-- },
	-- 			extensions = {
	-- 				["ui-select"] = {
	-- 					require("telescope.themes").get_dropdown(),
	-- 				},
	-- 				fzf = {
	-- 					fuzzy = true,
	-- 					override_generic_sorter = true,
	-- 					override_file_sorter = true,
	-- 					case_mode = "smart_case",
	-- 				},
	-- 			},
	-- 		})
	--
	-- 		-- Enable Telescope extensions if they are installed
	-- 		pcall(require("telescope").load_extension, "fzf")
	-- 		pcall(require("telescope").load_extension, "ui-select")
	-- 	end,
	-- },
}
-- vim: ts=2 sts=2 sw=2 et
